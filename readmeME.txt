- просмотр данных сохраненных в БД (группировка по IP, по дате, выборка по промежутку дат). 
- API для получения данных в виде JSON (смысл тот же: получение данных по временному промежутку, возможность группировать/фильтровать по IP)
- конфигурация через файл настроек (где лежат логи, маска файлов, и все, что Вам потребуется для настройки приложения)
- авторизация (пользователи в БД) (опционально)

Разбор файлов должен выполняться как принудительно (запуск пользователем), так и по cron'у.
С форматом логов веб-сервера Apache можно ознакомится по адресу: 

https://httpd.apache.org/docs/2.4/mod/mod_log_config.html#logformat

Что может находиться в логе веб-сервера Apache можно ознакомится по адресу:

https://httpd.apache.org/docs/2.4/mod/mod_log_config.html#formats.

Пример логов веб-сервера Apache (нас интересует access) можно ознакомится по адресу:

https://www.ossec.net/docs/log_samples/apache/apache.html

Просмотр данных с выбором нужного фильтра обеспечить через консоль. Реализация через оконный интерфейс будет плюсом.
Необходимо отследить все возможные ошибки, обработав их и представив пользователю в удобном виде.

Конфиг.

files_dir = /apache/logs

ext = log

format = %h %l %t "%r" %>s %b

==========================

1. функционал программы - парсинг

> logwriter parse

2. функционал программы - просмотр

> logwriter 10.06.2004

> logwriter 10.06.2004 ip

> logwriter 10.06.2004 ip status

> logwriter 10.06.2004 12.06.2004

> logwriter 10.06.2004 12.06.2004 ip

 

Язык программирования: Python
Веб-фреймворк: jango
База данных:MySQL 
Модуль для парсинга логов: apache-log-parser
Конфигурация через файл: configparser